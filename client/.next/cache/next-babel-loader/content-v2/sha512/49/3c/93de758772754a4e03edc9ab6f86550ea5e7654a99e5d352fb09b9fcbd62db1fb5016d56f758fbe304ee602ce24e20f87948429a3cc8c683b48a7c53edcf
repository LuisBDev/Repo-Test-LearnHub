{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Developer/Desktop/testProject/learnhub/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Developer/Desktop/testProject/learnhub/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Developer\\\\Desktop\\\\testProject\\\\learnhub\\\\client\\\\pages\\\\course\\\\[slug].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport SingleCourseJumbotron from \"../../components/cards/SingleCourseJumbotron\";\nimport PreviewModal from \"../../components/modal/PreviewModal\";\nimport SingleCourseLessons from \"../../components/cards/SingleCourseLessons\";\nimport { Context } from \"../../context\";\nimport { toast } from \"react-toastify\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nvar SingleCourse = function SingleCourse(_ref) {\n  _s();\n\n  var course = _ref.course;\n\n  // estado\n  var _useState = useState(false),\n      showModal = _useState[0],\n      setShowModal = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      preview = _useState2[0],\n      setPreview = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState({}),\n      enrolled = _useState4[0],\n      setEnrolled = _useState4[1]; // contexto\n\n\n  var _useContext = useContext(Context),\n      user = _useContext.state.user;\n\n  useEffect(function () {\n    if (user && course) checkEnrollment();\n  }, [user, course]);\n\n  var checkEnrollment = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"/api/check-enrollment/\".concat(course._id));\n\n            case 2:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              console.log(\"VERIFICAR INSCRIPCIÓN\", data);\n              setEnrolled(data);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function checkEnrollment() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var router = useRouter();\n  var slug = router.query.slug;\n\n  var handlePaidEnrollment = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$axios$post, data, stripe;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setLoading(true); // verificar si el usuario ha iniciado sesión\n\n              if (!user) router.push(\"/login\"); // verificar si ya está inscrito\n\n              if (!enrolled.status) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", router.push(\"/user/course/\".concat(enrolled.course.slug)));\n\n            case 5:\n              _context2.next = 7;\n              return axios.post(\"/api/paid-enrollment/\".concat(course._id));\n\n            case 7:\n              _yield$axios$post = _context2.sent;\n              data = _yield$axios$post.data;\n              _context2.next = 11;\n              return loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\n            case 11:\n              stripe = _context2.sent;\n              stripe.redirectToCheckout({\n                sessionId: data\n              });\n              _context2.next = 20;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](0);\n              toast(\"Error en la inscripción, inténtalo de nuevo.\");\n              console.log(_context2.t0);\n              setLoading(false);\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 15]]);\n    }));\n\n    return function handlePaidEnrollment() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleFreeEnrollment = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var _yield$axios$post2, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              _context3.prev = 1;\n              // verificar si el usuario ha iniciado sesión\n              if (!user) router.push(\"/login\"); // verificar si ya está inscrito\n\n              if (!enrolled.status) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", router.push(\"/user/course/\".concat(enrolled.course.slug)));\n\n            case 5:\n              setLoading(true);\n              _context3.next = 8;\n              return axios.post(\"/api/free-enrollment/\".concat(course._id));\n\n            case 8:\n              _yield$axios$post2 = _context3.sent;\n              data = _yield$axios$post2.data;\n              toast(data.message);\n              setLoading(false);\n              router.push(\"/user/course/\".concat(data.course.slug));\n              _context3.next = 20;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](1);\n              toast(\"Error en la inscripción, inténtalo de nuevo.\");\n              console.log(_context3.t0);\n              setLoading(false);\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 15]]);\n    }));\n\n    return function handleFreeEnrollment(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SingleCourseJumbotron, {\n      course: course,\n      showModal: showModal,\n      setShowModal: setShowModal,\n      preview: preview,\n      setPreview: setPreview,\n      user: user,\n      loading: loading,\n      handlePaidEnrollment: handlePaidEnrollment,\n      handleFreeEnrollment: handleFreeEnrollment,\n      enrolled: enrolled,\n      setEnrolled: setEnrolled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(PreviewModal, {\n      showModal: showModal,\n      setShowModal: setShowModal,\n      preview: preview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, _this), course.lessons && /*#__PURE__*/_jsxDEV(SingleCourseLessons, {\n      lessons: course.lessons,\n      setPreview: setPreview,\n      showModal: showModal,\n      setShowModal: setShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(SingleCourse, \"1CSZi+XvdgziteEMgM7TKZWC1M0=\", false, function () {\n  return [useRouter];\n});\n\n_c = SingleCourse;\nexport var __N_SSP = true;\nexport default SingleCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleCourse\");","map":{"version":3,"sources":["C:/Users/Developer/Desktop/testProject/learnhub/client/pages/course/[slug].js"],"names":["useState","useEffect","useContext","axios","useRouter","SingleCourseJumbotron","PreviewModal","SingleCourseLessons","Context","toast","loadStripe","SingleCourse","course","showModal","setShowModal","preview","setPreview","loading","setLoading","enrolled","setEnrolled","user","state","checkEnrollment","get","_id","data","console","log","router","slug","query","handlePaidEnrollment","push","status","post","process","env","NEXT_PUBLIC_STRIPE_KEY","stripe","redirectToCheckout","sessionId","handleFreeEnrollment","e","preventDefault","message","lessons"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"next/router\";\r\nimport SingleCourseJumbotron from \"../../components/cards/SingleCourseJumbotron\";\r\nimport PreviewModal from \"../../components/modal/PreviewModal\";\r\nimport SingleCourseLessons from \"../../components/cards/SingleCourseLessons\";\r\nimport { Context } from \"../../context\";\r\nimport { toast } from \"react-toastify\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nconst SingleCourse = ({ course }) => {\r\n    // estado\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [preview, setPreview] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [enrolled, setEnrolled] = useState({});\r\n    // contexto\r\n    const {\r\n        state: { user },\r\n    } = useContext(Context);\r\n\r\n    useEffect(() => {\r\n        if (user && course) checkEnrollment();\r\n    }, [user, course]);\r\n\r\n    const checkEnrollment = async () => {\r\n        const { data } = await axios.get(`/api/check-enrollment/${course._id}`);\r\n        console.log(\"VERIFICAR INSCRIPCIÓN\", data);\r\n        setEnrolled(data);\r\n    };\r\n\r\n    const router = useRouter();\r\n    const { slug } = router.query;\r\n\r\n    const handlePaidEnrollment = async () => {\r\n        try {\r\n            setLoading(true);\r\n            // verificar si el usuario ha iniciado sesión\r\n            if (!user) router.push(\"/login\");\r\n            // verificar si ya está inscrito\r\n            if (enrolled.status)\r\n                return router.push(`/user/course/${enrolled.course.slug}`);\r\n            const { data } = await axios.post(`/api/paid-enrollment/${course._id}`);\r\n            const stripe = await loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n            stripe.redirectToCheckout({ sessionId: data });\r\n        } catch (err) {\r\n            toast(\"Error en la inscripción, inténtalo de nuevo.\");\r\n            console.log(err);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleFreeEnrollment = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // verificar si el usuario ha iniciado sesión\r\n            if (!user) router.push(\"/login\");\r\n            // verificar si ya está inscrito\r\n            if (enrolled.status)\r\n                return router.push(`/user/course/${enrolled.course.slug}`);\r\n            setLoading(true);\r\n            const { data } = await axios.post(`/api/free-enrollment/${course._id}`);\r\n            toast(data.message);\r\n            setLoading(false);\r\n            router.push(`/user/course/${data.course.slug}`);\r\n        } catch (err) {\r\n            toast(\"Error en la inscripción, inténtalo de nuevo.\");\r\n            console.log(err);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* <pre>{JSON.stringify(course, null, 4)}</pre> */}\r\n            <SingleCourseJumbotron\r\n                course={course}\r\n                showModal={showModal}\r\n                setShowModal={setShowModal}\r\n                preview={preview}\r\n                setPreview={setPreview}\r\n                user={user}\r\n                loading={loading}\r\n                handlePaidEnrollment={handlePaidEnrollment}\r\n                handleFreeEnrollment={handleFreeEnrollment}\r\n                enrolled={enrolled}\r\n                setEnrolled={setEnrolled}\r\n            />\r\n\r\n            <PreviewModal\r\n                showModal={showModal}\r\n                setShowModal={setShowModal}\r\n                preview={preview}\r\n            />\r\n\r\n            {course.lessons && (\r\n                <SingleCourseLessons\r\n                    lessons={course.lessons}\r\n                    setPreview={setPreview}\r\n                    showModal={showModal}\r\n                    setShowModal={setShowModal}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport async function getServerSideProps({ query }) {\r\n    const { data } = await axios.get(`${process.env.API}/course/${query.slug}`);\r\n    return {\r\n        props: {\r\n            course: data,\r\n        },\r\n    };\r\n}\r\n\r\nexport default SingleCourse;\r\n"]},"metadata":{},"sourceType":"module"}