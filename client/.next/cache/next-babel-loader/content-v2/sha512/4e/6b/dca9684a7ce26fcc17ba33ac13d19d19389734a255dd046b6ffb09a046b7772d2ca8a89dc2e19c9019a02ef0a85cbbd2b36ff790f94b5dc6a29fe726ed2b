{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Developer\\\\Desktop\\\\testProject\\\\learnhub\\\\client\\\\context\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useReducer, createContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { useRouter } from 'next/router'; //estado inicial\n\nconst initialState = {\n  user: null\n}; //crear contexto\n\nconst Context = /*#__PURE__*/createContext();\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n\n    case 'LOGOUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(rootReducer, initialState); //router\n\n  const router = useRouter();\n  useEffect(() => {\n    dispatch({\n      type: 'LOGIN',\n      payload: JSON.parse(window.localStorage.getItem('user'))\n    });\n  }, []);\n  axios.interceptors.response.use(function (response) {\n    return response;\n  }, function (error) {\n    let res = error.response;\n\n    if (res.status === 401 && res.config && !res.config.__isRetryRequest) {\n      return new Promise((resolve, reject) => {\n        axios.get('/api/logout').then(data => {\n          console.log('/401 error > logout');\n          dispatch({\n            type: 'LOGOUT'\n          });\n          window.localStorage.removeItem('user');\n          router.push('/login');\n        }).catch(err => {\n          console.log('AXIOS INTERCEPTORS ERR', err);\n          reject(error);\n        });\n      });\n    }\n\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    const getCsrfToken = async () => {\n      const {\n        data\n      } = await axios.get('/api/csrf-token');\n      console.log('CSRF', data);\n      axios.defaults.headers['X-CSRF-Token'] = data.getCsrfToken;\n    };\n\n    getCsrfToken();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\nexport { Context, Provider };","map":{"version":3,"sources":["C:/Users/Developer/Desktop/testProject/learnhub/client/context/index.js"],"names":["useReducer","createContext","useEffect","axios","useRouter","initialState","user","Context","rootReducer","state","action","type","payload","Provider","children","dispatch","router","JSON","parse","window","localStorage","getItem","interceptors","response","use","error","res","status","config","__isRetryRequest","Promise","resolve","reject","get","then","data","console","log","removeItem","push","catch","err","getCsrfToken","defaults","headers"],"mappings":"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","sourcesContent":["import { useReducer, createContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\n\r\n\r\n//estado inicial\r\nconst initialState = {\r\n    user: null,\r\n};\r\n\r\n//crear contexto\r\nconst Context = createContext();\r\n\r\nconst rootReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n            };\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                user: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(rootReducer, initialState);\r\n\r\n    //router\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: 'LOGIN',\r\n            payload: JSON.parse(window.localStorage.getItem('user')),\r\n        });\r\n    }, []);\r\n\r\n    axios.interceptors.response.use(function (response) {\r\n        return response;\r\n    }, function (error) {\r\n        let res = error.response;\r\n        if (res.status === 401 && res.config && !res.config.__isRetryRequest) {\r\n            return new Promise((resolve, reject) => {\r\n                axios.get('/api/logout')\r\n                    .then((data) => {\r\n                        console.log('/401 error > logout');\r\n                        dispatch({ type: 'LOGOUT' });\r\n                        window.localStorage.removeItem('user');\r\n                        router.push('/login');\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log('AXIOS INTERCEPTORS ERR', err);\r\n                        reject(error);\r\n                    });\r\n            });\r\n        }\r\n        return Promise.reject(error);\r\n    });\r\n\r\n    useEffect(() => {\r\n        const getCsrfToken = async () => {\r\n            const { data } = await axios.get('/api/csrf-token');\r\n            console.log('CSRF', data);\r\n            axios.defaults.headers['X-CSRF-Token'] = data.getCsrfToken;\r\n        };\r\n        getCsrfToken();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Context.Provider value={{ state, dispatch }}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n};\r\n\r\nexport { Context, Provider };"]},"metadata":{},"sourceType":"module"}