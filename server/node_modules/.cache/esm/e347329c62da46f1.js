let express,cors,readdirSync,mongoose,csrf,cookieParser,morgan;_62d‍.w("express",[["default",["express"],function(v){express=v}]]);_62d‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_62d‍.w("fs",[["readdirSync",["readdirSync"],function(v){readdirSync=v}]]);_62d‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_62d‍.w("csurf",[["default",["csrf"],function(v){csrf=v}]]);_62d‍.w("cookie-parser",[["default",["cookieParser"],function(v){cookieParser=v}]]);_62d‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);






require("dotenv").config();

const csrfProtection = csrf({ cookie: true });

// crear la aplicación express
const app = express();

// base de datos
mongoose
  .connect(process.env.DATABASE, {
    useNewUrlParser: true,
    useFindAndModify: false,
    useUnifiedTopology: true,
    useCreateIndex: true,
  })
  .then(() => console.log("**CONEXIÓN A LA BASE DE DATOS EXITOSA**"))
  .catch((err) => _62d‍.g.console.log("ERROR EN LA CONEXIÓN A LA BASE DE DATOS => ", err));

// aplicar middlewares
app.use(cors());
app.use(express.json({ limit: "5mb" }));
app.use(cookieParser());
app.use(morgan("dev"));

// rutas
readdirSync("./routes").map((r) => app.use("/api", require(`./routes/${r}`)));
// csrf
app.use(csrfProtection);

app.get("/api/csrf-token", (req, res) => {
  res.json({ csrfToken: req.csrfToken() });
});

// puerto
const port = process.env.PORT || 8000;

app.listen(port, () => console.log(`El servidor se está ejecutando en el puerto ${port}`));
